[{"title":"Dark mode","type":0,"sectionRef":"#","url":"/configuration/dark-mode","content":"","keywords":""},{"title":"How to enable the dark mode​","type":1,"pageTitle":"Dark mode","url":"/configuration/dark-mode#how-to-enable-the-dark-mode","content":"To activate dark mode for PushFeedback, you will need to modify the HTML structure of your website. This involves adding a specific attribute to the main &lt;html&gt; tag of your site's HTML code. &lt;html data-theme=&quot;dark&quot;&gt; &lt;!-- Your existing HTML content --&gt; &lt;/html&gt;  This change signals PushFeedback to switch to its dark theme. "},{"title":"Example​","type":1,"pageTitle":"Dark mode","url":"/configuration/dark-mode#example","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/NWoBZvZ&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Layout","type":0,"sectionRef":"#","url":"/configuration/layout","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Layout","url":"/configuration/layout#usage","content":"To customize the properties, you need to set the appropriate attributes on the &lt;feedback-button&gt; element in your HTML. For example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; button-style=&quot;dark&quot; hide-icon=&quot;true&quot;&gt;Feedback&lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Layout","url":"/configuration/layout#properties","content":"The table below lists all the available properties you can set: Property\tDescriptionproject\tRequired Type: string The project ID. button-position\tType: string Default value: default Available values: default, bottom-right, center-right Position of the button. button-style\tType: string Default value: default Available values: default, dark, light Style of the button. custom-font\tType: boolean Default value: false When set to true, the Inter font will not be loaded. Useful if your site already uses a different font, enabling a quicker load time. hide-email\tType: boolean Default value: false Whether to hide the email input. email-address\tType: string Initial value for the email input field. hide-icon\tType: boolean Default value: false Whether to hide the button icon. hide-screenshot-button\tType: boolean Default value: false Whether to hide the screenshot button. modal-position\tType: string Default value: center Available values: center, sidebar-right, sidebar-left, top-right, top-left, bottom-right, bottom-left, center-right, center-left Position of the feedback modal. hide-privacy-policy\tType: boolean Default value: true Whether to hide the privacy policy checkbox. privacy-policy-text\tType: boolean Default value: I have read and expressly consent to the terms of the &lt;a href='https://pushfeedback.com/privacy'&gt;Privacy Policy&lt;/a&gt;. Privacy policy text. rating\tType: number Default value: None Rating selected by default. Available values: 1...5. In thumbs mode, 0 means thumbs down and 1 thumbs up. hide-ratings\tType: boolean Default value: false Wether to hide the ratings input. rating-mode\tType: string Default value: thumbs Available values: thumbs, stars Type of rating system. "},{"title":"Examples​","type":1,"pageTitle":"Layout","url":"/configuration/layout#examples","content":"Here you'll find practical examples to guide you in customizing the PushFeedback button for various use cases. "},{"title":"Change the button style​","type":1,"pageTitle":"Layout","url":"/configuration/layout#change-the-button-style","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/rNQrojP&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback button styles&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Create a floating button​","type":1,"pageTitle":"Layout","url":"/configuration/layout#create-a-floating-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/PoxBXmm&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Floating feedback buttons&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Add the widget to any button​","type":1,"pageTitle":"Layout","url":"/configuration/layout#add-the-widget-to-any-button","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQxyeY&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Change modal position​","type":1,"pageTitle":"Layout","url":"/configuration/layout#change-modal-position","content":"info For an optimal viewing experience of this demo, select the 0.25x zoom level on CodePen. See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/poQZqwZ&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback widget modal position&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Prefill email​","type":1,"pageTitle":"Layout","url":"/configuration/layout#prefill-email","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/yLQROXr&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Prefill email&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Enable privacy policy​","type":1,"pageTitle":"Layout","url":"/configuration/layout#enable-privacy-policy","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/OJrQPzp&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Enable stars rating​","type":1,"pageTitle":"Layout","url":"/configuration/layout#enable-stars-rating","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/QWYVgMX&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Feedback widget rating&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Whitelabel","type":0,"sectionRef":"#","url":"/configuration/whitelabel","content":"","keywords":""},{"title":"Steps​","type":1,"pageTitle":"Whitelabel","url":"/configuration/whitelabel#steps","content":"Follow the steps below to enable this feature: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, click on the Teams link in the top navigation bar. Within the Teams settings, look for the Whitelabel option. Activate this option to enable white labeling. Save your settings by clicking the Save button. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget. The PushFeedback logo should no longer be visible at the bottom of the widget. With the logo removed, your feedback widget will seamlessly blend with your website, providing a consistent user experience. "},{"title":"Text","type":0,"sectionRef":"#","url":"/configuration/text","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Text","url":"/configuration/text#usage","content":"To customize the textual properties, set the respective attributes on the &lt;feedback-button&gt; element in your HTML. Here's an illustrative example: &lt;feedback-button project=&quot;YOUR_PROJECT_ID&quot; email-placeholder=&quot;Enter your email&quot; modal-title=&quot;Give us your thoughts&quot;&gt; Button text &lt;/feedback-button&gt;  "},{"title":"Properties​","type":1,"pageTitle":"Text","url":"/configuration/text#properties","content":"The table below lists all the available properties you can override: Property\tDescriptionemail-placeholder\tType: string Default value: Email address (optional) Placeholder text for the email input field. error-message\tType: string Default value: Please try again later.&quot; Message displayed when there's an error submitting feedback. modal-title-error-4-0-3\tType: string Default value: The request URL does not match the one defined in PushFeedback for this project.&quot; Message displayed when there's a 403 error submitting feedback. modal-title-error-4-0-4\tType: string Default value: We could not find the provided project id in PushFeedback. Message displayed when there's a 404 error submitting feedback. message-placeholder\tType: string Default value: Comments Placeholder for the feedback message input. modal-title\tType: string Default value: Share your feedback Title of the feedback modal. modal-title-error\tType: string Default value: Oops! Title displayed when there's an error submitting feedback. modal-title-success\tType: string Default value: Thanks for your feedback! Title displayed upon successful feedback submission. screenshot-button-tooltip-text\tType: string Default value: Take a Screenshot Tooltip text for the screenshot button. screenshot-topbar-text\tType: string Default value: SELECT AN ELEMENT ON THE PAGE Instructional text when taking a screenshot. send-button-text\tType: string Default value: Send Text for the button that submits feedback. rating-placeholder\tType: string Default value: Was this page helpful? Heading for the feedback rating feature (thumbs). rating-stars-placeholder\tType: string Default value: How would you rate this page Heading for the feedback rating feature (stars).  "},{"title":"Example​","type":1,"pageTitle":"Text","url":"/configuration/text#example","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/MWzPyvM&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Feedback widget for Antora","type":0,"sectionRef":"#","url":"/installation/antora","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.An Antora project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#installation","content":"To integrate the PushFeedback widget into your Antora site: Modify the UI bundle: If you're using a custom UI bundle for your Antora project, navigate to the UI bundle's directory. If not, you'll first need to clone Antora's default UI bundle. git clone https://gitlab.com/antora/antora-ui-default.git Locate the head.hbs file, which is usually under src/partials, and insert the following code: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Locate the footer.hbs or the specific file where you'd like the feedback button to appear. Just before the closing tags in that file, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Build the project: If you're using a custom UI, make sure to re-bundle it and then run the Antora command to build your project.If you cloned the default UI, you'd have to integrate it as a local UI and then run Antora with the --ui-bundle-url flag to point to your modified local UI bundle. Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Antora","url":"/installation/antora#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for HTML sites","type":0,"sectionRef":"#","url":"/installation/cdn","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#installation","content":"To integrate the PushFeedback widget into your website: Insert the following code within the &lt;head&gt; section of your site's HTML: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for HTML sites","url":"/installation/cdn#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Gatsby","type":0,"sectionRef":"#","url":"/installation/gatsby","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Gatsby application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#installation","content":"To integrate the PushFeedback widget into your Gatsby site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. In the main component where you wish to place the feedback button (often src/pages/index.js), embed the PushFeedback button: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; const IndexPage = () =&gt; { useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return ( &lt;div className=&quot;page-layout&quot;&gt; {/* Other components and content */} &lt;FeedbackButton project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/FeedbackButton&gt; &lt;/div&gt; ); } export default IndexPage; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Gatsby app by running gatsby develop in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Gatsby","url":"/installation/gatsby#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Hugo","type":0,"sectionRef":"#","url":"/installation/hugo","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Hugo project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#installation","content":"To integrate the PushFeedback widget into your Hugo site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd your-hugo-site/themes/your-theme-name/ Replace your-hugo-site with the path to your Hugo site and your-theme-name with the name of the theme you're using. Find the head partial, which is often located under layouts/partials/. Add the following code to this file: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Next, find the footer partial (or wherever you'd like the feedback button to be placed) and add the following code just before the closing tags: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Hugo project root and run: hugo server Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Hugo","url":"/installation/hugo#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Jekyll","type":0,"sectionRef":"#","url":"/installation/jekyll","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Jekyll project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#installation","content":"To integrate the PushFeedback widget into your Jekyll site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. Open the _includes/head.html file (or the equivalent file that contains the &lt;head&gt; section in your Jekyll theme). Append the following code: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; Open _includes/footer.html or the specific file where you'd like the feedback button to appear. Add the following snippet just before its closing tags: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Jekyll project root and run: jekyll build Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Jekyll","url":"/installation/jekyll#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Docusaurus","type":0,"sectionRef":"#","url":"/installation/docusaurus","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Docusaurus site and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#installation","content":"To integrate the PushFeedback widget into your Docusaurus site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: Docusaurus 3.xDocusaurus 2.X npm install docusaurus-pushfeedback Add the plugin to your Docusaurus config file docusaurus.config.js: plugins: [ [ 'docusaurus-pushfeedback',{ project: '&lt;YOUR_PROJECT_ID&gt;' } ] ], Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Docusaurus project by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Customization​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#customization","content":"You can customize the PushFeedback widget to suit your needs. For example, you can change the widget's position, color, and more. To do so, you can add any of the following configuration options to the plugin formatted as camelCase. Here's an example: plugins: [ [ 'docusaurus-pushfeedback',{ project: '&lt;YOUR_PROJECT_ID&gt;', buttonPosition: 'center-right', modalPosition: 'sidebar-right', buttonStyle: 'dark', } ] ],  To further customize the style of the PushFeedback widget in Docusaurus, such as altering the widget's background color, you can override specific CSS properties. This is done by defining these properties in a custom stylesheet. Here's how you can do it: In your project's src directory, create the file css/custom.css. In the custom.css file, you can define your custom CSS properties. For example, to change the widget's primary color, add the following CSS rule: :root { --feedback-primary-color: #FF0000; /* Replace #FF0000 with the hex color code of your choice */ } For a complete reference of properties you can modify, see the Styles documentation. Open your docusaurus.config.js file and locate the presets array and within it, the classic preset configuration. Then, add a reference to your custom stylesheet in the theme configuration. It should look something like this: presets: [ [ 'classic', { // ... other configurations ... theme: { customCss: require.resolve('./src/css/custom.css'), // Add this line }, // ... other configurations ... }, ], ],  "},{"title":"Advanced setup: Custom placement with Swizzling​","type":1,"pageTitle":"Feedback widget for Docusaurus","url":"/installation/docusaurus#advanced-setup-custom-placement-with-swizzling","content":"This alternative installation method is best for those projects that require granular control over the widget's positioning. For example, you can use it to embedded it at the end of every page as follows:  To integrate the PushFeedback widget into your Docusaurus site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react For Docusaurus, the best approach is to swizzle the original footer component to embed the PushFeedback button. This ensures the feedback button is loaded just before the closing body tag for optimal performance. Begin by using the npm run swizzle command to start the swizzle process: npm run swizzle @docusaurus/theme-classic DocItem/Footer When prompted with the question: Which swizzle action do you want to do? , choose Wrap. By choosing to wrap, Docusaurus will create a wrapper component for the Footer in the src/theme directory. This allows you to extend the original footer component without modifying its intrinsic content. After swizzling, navigate to src/theme/DocItem/Footer/index.js in your project directory. Now, integrate the PushFeedback button: import React, {useEffect} from 'react'; import Footer from '@theme-original/DocItem/Footer'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function FeedbackWidget() { const buttonThumbsUp = &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot;&gt;&lt;path d=&quot;M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3&quot;&gt;&lt;/path&gt;&lt;/svg&gt;; const buttonThumbsDown = &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;20&quot; height=&quot;20&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; strokeWidth=&quot;2&quot; strokeLinecap=&quot;round&quot; strokeLinejoin=&quot;round&quot;&gt;&lt;path d=&quot;M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17&quot;&gt;&lt;/path&gt;&lt;/svg&gt;; // Replace with your &lt;PROJECT_ID&gt; const projectId = '&lt;PROJECT_ID&gt;'; useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return( &lt;div className=&quot;feedback-widget margin-top--md margin-bottom--md&quot;&gt; &lt;div className=&quot;margin-bottom--sm&quot;&gt; &lt;b&gt;Was this helpful?&lt;/b&gt; &lt;/div&gt; &lt;div className=&quot;button button--outline button--primary button--sm&quot;&gt; &lt;FeedbackButton project={projectId} rating=&quot;1&quot; custom-font=&quot;True&quot; button-style=&quot;default&quot; modal-position=&quot;center&quot;&gt; {buttonThumbsUp} &lt;/FeedbackButton&gt; &lt;/div&gt; &lt;div className=&quot;button button--outline button--primary button--sm margin-left--sm&quot;&gt; &lt;FeedbackButton project={projectId} rating=&quot;0&quot; custom-font=&quot;True&quot; button-style=&quot;default&quot; modal-position=&quot;center&quot;&gt; {buttonThumbsDown} &lt;/FeedbackButton&gt; &lt;/div&gt; &lt;/div&gt; ); } export default function FooterWrapper(props) { return ( &lt;&gt; &lt;FeedbackWidget/&gt; &lt;Footer {...props} /&gt; &lt;/&gt; ); } Replace &lt;PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your Docusaurus project by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Styles","type":0,"sectionRef":"#","url":"/configuration/styles","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Styles","url":"/configuration/styles#usage","content":"To customize these properties, define them in your website's CSS using the :root selector for global changes or a specific selector to target particular areas: :root { --feedback-primary-color: #00D68F; ... }  "},{"title":"Properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#properties","content":"The tables below lists all the available properties you can override: "},{"title":"Global properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#global-properties","content":":root { /* Colors */ --feedback-primary-color: #0070F4; --feedback-secondary-color: #f1f3f4; --feedback-light-color: #ccc; --feedback-dark-color: #191919; --feedback-text-color: #5f6368; --feedback-white-color: #fff; --feedback-highlight-color: #ffb422; /* Fonts */ --feedback-font-family: &quot;Inter&quot;, &quot;Tahoma&quot;, &quot;sans-serif&quot;; --feedback-heading-font-size: 16px; --feedback-text-font-size: 14px; }  "},{"title":"Feedback button properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-button-properties","content":":root { /* Feedback button*/ --feedback-button-border-radius: 20px; --feedback-button-dark-bg-color: var(--feedback-primary-color); --feedback-button-dark-text-color: var(--feedback-white-color); --feedback-button-light-bg-color: var(--feedback-white-color); --feedback-button-light-text-color: var(--feedback-primary-color); --feedback-button-text-font-size: var(--feedback-text-font-size); --feedback-button-text-font-weight: 600; --feedback-button-z-index: 300; }  "},{"title":"Feedback modal properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#feedback-modal-properties","content":":root { --feedback-modal-button-bg-color: var(--feedback-white-color); --feedback-modal-button-bg-color-active: var(--feedback-white-color); --feedback-modal-button-border-color: var(--feedback-light-color); --feedback-modal-button-border-color-active: var(--feedback-primary-color); --feedback-modal-button-border-radius: 4px; --feedback-modal-button-font-size: var(--feedback-text-font-size); --feedback-modal-button-icon-color: var(--feedback-dark-color); --feedback-modal-button-icon-color-active: var(--feedback-primary-color); --feedback-modal-button-submit-bg-color: var(--feedback-primary-color); --feedback-modal-button-submit-bg-color-hover: var(--feedback-primary-color); --feedback-modal-button-submit-border-color-hover: var(--feedback-primary-color); --feedback-modal-button-submit-text-color: var(--feedback-white-color); --feedback-modal-button-submit-text-color-hover: var(--feedback-white-color); --feedback-modal-button-text-color: var(--feedback-dark-color); --feedback-modal-button-text-color-active: var(--feedback-primary-color); --feedback-modal-close-bg-color: var(--feedback-white-color); --feedback-modal-close-color: var(--feedback-dark-color); --feedback-modal-content-bg-color: var(--feedback-white-color); --feedback-modal-content-border-color: var(--feedback-light-color); --feedback-modal-content-border-radius: 8px; --feedback-modal-content-font-family: var(--feedback-font-family); --feedback-modal-content-position-bottom: 10px; --feedback-modal-content-position-left: 10px; --feedback-modal-content-position-right: 10px; --feedback-modal-content-position-top: 10px; --feedback-modal-content-text-color: var(--feedback-text-color); --feedback-modal-content-z-index: 300; --feedback-modal-element-hover-border-color: var(--feedback-primary-color); --feedback-modal-element-selected-border-color: var(--feedback-primary-color); --feedback-modal-footer-link: var(--feedback-dark-color); --feedback-modal-header-font-family: var(--feedback-font-family); --feedback-modal-header-font-size: var(--feedback-heading-font-size); --feedback-modal-header-font-weight: 500; --feedback-modal-header-text-color: var(--feedback-dark-color); --feedback-modal-input-bg-color: var(--feedback-secondary-color); --feedback-modal-input-border-color: transparent; --feedback-modal-input-border-color-focused: transparent; --feedback-modal-input-border-radius: 4px; --feedback-modal-input-font-size: var(--feedback-text-font-size); --feedback-modal-input-text-color: var(--feedback-text-color); --feedback-modal-message-font-size: var(--feedback-text-font-size); --feedback-modal-modal-wrapper-z-index: 300; --feedback-modal-rating-button-color: var(--feedback-text-color); --feedback-modal-rating-button-selected-color: var(--feedback-primary-color); --feedback-modal-rating-button-stars-selected-color: var(--feedback-highlight-color); }  "},{"title":"Screenshot mode properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#screenshot-mode-properties","content":":root { --feedback-modal-screenshot-bg-color: rgba(0, 0, 0, 0.4); --feedback-modal-screenshot-close-color: var(--feedback-dark-color); --feedback-modal-screenshot-header-bg-color: var(--feedback-white-color); --feedback-modal-screenshot-header-text-color: var(--feedback-dark-color); --feedback-modal-screenshot-header-z-index: 250; --feedback-modal-screnshot-z-index: 100; }  "},{"title":"Dark mode properties​","type":1,"pageTitle":"Styles","url":"/configuration/styles#dark-mode-properties","content":"[data-theme='dark'] { --feedback-text-color: #b0b8c4; --feedback-light-color: #363636; --feedback-modal-button-bg-color-active: transparent; --feedback-modal-button-icon-color: var(--feedback-white-color); --feedback-modal-button-text-color: var(--feedback-white-color); --feedback-modal-close-bg-color: transparent; --feedback-modal-close-color: var(--feedback-white-color); --feedback-modal-content-bg-color: var(--feedback-dark-color); --feedback-modal-content-text-color: var(--feedback-text-color); --feedback-modal-footer-link: var(--feedback-white-color); --feedback-modal-header-text-color: var(--feedback-white-color); --feedback-modal-input-bg-color: var(--feedback-light-color); --feedback-modal-input-text-color: var(--feedback-white-color); --feedback-modal-rating-button-color: var(--feedback-white-color); --feedback-modal-screenshot-close-color: var(--feedback-white-color); --feedback-modal-screenshot-header-bg-color: var(--feedback-dark-color); --feedback-modal-screenshot-header-text-color: var(--feedback-white-color); }  "},{"title":"Example​","type":1,"pageTitle":"Styles","url":"/configuration/styles#example","content":"See the Pen &lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful/pen/abQRZNw&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;Untitled&lt;/a&gt; by David Garcia (&lt;a href=&quot;https://codepen.io/David-Garcia-the-bashful&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;@David-Garcia-the-bashful&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt;CodePen&lt;/a&gt;. "},{"title":"Feedback widget for MkDocs","type":0,"sectionRef":"#","url":"/installation/mkdocs","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A MkDocs project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#installation","content":"To integrate the PushFeedback widget into your MkDocs site: Navigate to your docs folder and locate the overrides directory (create one if it doesn't exist). Inside the overrides directory, create or edit the file named base.html. info The file names of the templates to override and the block names you need to override might be different, depending on your theme. This example is specifically for the Material for MkDocs theme. Always refer to your theme's documentation or source templates to ensure accurate customization. In this base.html, extend the base template and override the necessary sections. Here's what you should add: {% extends &quot;base.html&quot; %} {% block extrahead %} &lt;!-- PushFeedback styles --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;!-- PushFeedback script as ES6 module --&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; {% endblock %} {% block content %} {{ super() }} &lt;!-- Feedback button --&gt; &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; {% endblock %} Ensure your mkdocs.yml points to the overrides directory: theme: name: 'material' custom_dir: 'docs/overrides' Build your MkDocs project: mkdocs build Once it builds successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for MkDocs","url":"/installation/mkdocs#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Sphinx","type":0,"sectionRef":"#","url":"/installation/sphinx","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Sphinx project. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#installation","content":"To integrate the PushFeedback widget into your Sphinx site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback via PIP: pip install sphinx-pushfeedback Add the extension to your Sphinx project's conf.py file: extensions ['sphinx_pushfeedback'] Configure your project ID in the conf.py file: pushfeedback_project = '&lt;YOUR_PROJECT_ID&gt;' Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Build the documentation: make html Once built, open your documentation in a web browser. Verify that the feedback button appears and works correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Sphinx","url":"/installation/sphinx#next-steps","content":"You can customize the PushFeedback widget to suit your needs. For example, you can change the widget's position, color, and more. To do so, you can add any of the following configuration options to your conf.py file, with the following modifications: Prefix configuration options with pushfeedback_. For instance, project would be pushfeedback_project. Use underscores instead of hyphens as words separator. For example, button-position becomes pushfeedback_button_position. Here's an example: pushfeedback_button_style = &quot;light&quot;  "},{"title":"Feedback widget for NPM projects","type":0,"sectionRef":"#","url":"/installation/npm","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#installation","content":"To integrate the PushFeedback widget into your site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback Make sure you embed the styles and scripts in your primary JS or entry file: // Incorporate PushFeedback styles import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; // Initialize the PushFeedback widget import 'pushfeedback/dist/pushfeedback/pushfeedback.esm.js'; Just before the closing &lt;/body&gt; tag of your website's HTML, add the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Open the website in a web browser to verify the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for NPM projects","url":"/installation/npm#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for React","type":0,"sectionRef":"#","url":"/installation/react","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A React application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#installation","content":"Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. In the main component where you wish to place the feedback button (often src/App.js), embed the PushFeedback button: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { defineCustomElements } from 'pushfeedback/loader'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; function App() { useEffect(() =&gt; { if (typeof window !== 'undefined') { defineCustomElements(window); } }, []); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;FeedbackButton project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/FeedbackButton&gt; &lt;/div&gt; ); } export default App; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Start your React app by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for React","url":"/installation/react#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Next.js","type":0,"sectionRef":"#","url":"/installation/nextjs","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Next.js application and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#installation","content":"To integrate the PushFeedback widget into your Next.js site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback-react info If you're using yarn as your package manager, run yarn add pushfeedback-react instead of the npm command above. This will download and install the PushFeedback package into your project. Create a wrapper for the feedback button by creating a file under the path components/pushfeedback.tsx and paste the following code: import React, { useEffect } from 'react'; import { FeedbackButton } from 'pushfeedback-react'; import { JSX, defineCustomElements } from 'pushfeedback/loader'; import { StyleReactProps } from 'pushfeedback-react/dist/types/react-component-lib/interfaces'; import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; const DynamicFeedbackButtonComponent = (props: React.JSX.IntrinsicAttributes &amp; JSX.FeedbackButton &amp; Omit&lt;React.HTMLAttributes&lt;HTMLFeedbackButtonElement&gt;, &quot;style&quot;&gt; &amp; StyleReactProps &amp; React.RefAttributes&lt;HTMLFeedbackButtonElement&gt;) =&gt; { useEffect(() =&gt; { defineCustomElements(window); }, []); return &lt;FeedbackButton {...props} /&gt;; }; export default DynamicFeedbackButtonComponent; In the component where you wish to display the feedback button (often _pages/app.tsx or app/layout.tsx), include it shown below: 'use client' import dynamic from 'next/dynamic'; export default function Banner() { const DynamicFeedbackButton = dynamic(() =&gt; import('@/components/utils/pushfeedback'), { ssr: false, }); return ( &lt;div className=&quot;App&quot;&gt; {/* Other components and content */} &lt;DynamicFeedbackButton project=&quot;c2syqqm916&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot; custom-font=&quot;true&quot;&gt;Feedback&lt;/DynamicFeedbackButton&gt; &lt;/div&gt; ); Start your Next.js app by running npm start or yarn start in your terminal. Once it compiles successfully, verify that the feedback button appears and functions correctly on your site. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Next.js","url":"/installation/nextjs#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Vue.js","type":0,"sectionRef":"#","url":"/installation/vue","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#prerequisites","content":"Before you begin, you'll need to have the following: A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Vue.js project and Node.js installed. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#installation","content":"To integrate the PushFeedback widget into your Vue.js site: Open your terminal or command prompt. Navigate to your project's root directory using the cd command: cd path/to/your/project Replace path/to/your/project with your project's actual directory path. With your terminal still open, run the following command to install PushFeedback: npm install pushfeedback Open your main Vue component or the desired Vue component where you want the feedback widget to appear. Then, incorporate the PushFeedback styles and scripts: &lt;script&gt; // Incorporate PushFeedback styles import 'pushfeedback/dist/pushfeedback/pushfeedback.css'; // Initialize the PushFeedback widget import 'pushfeedback/dist/pushfeedback/pushfeedback.esm.js'; &lt;/script&gt; In the template section of your Vue component, add the following snippet: &lt;template&gt; &lt;!-- Rest of your component's template --&gt; &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt; Feedback &lt;/feedback-button&gt; &lt;/template&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. After making these changes, navigate back to your Vue.js project root and run: npm run serve Open the website in a web browser to verify that the feedback button appears and works correctly. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Vue.js","url":"/installation/vue#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Feedback widget for Wordpress","type":0,"sectionRef":"#","url":"/installation/wordpress","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Wordpress website. "},{"title":"Installation​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#installation","content":"To embed the PushFeedback widget into your WordPress site: Access the admin dashboard of your WordPress website by navigating to http://yourwebsite.com/wp-admin/. Add the PushFeedback styles and scripts: Navigate to Appearance &gt; Theme Editor. From the right sidebar, select the header.php file to edit the &lt;head&gt; section. Insert the following code within the &lt;head&gt; section: &lt;!-- Initialize the PushFeedback widget --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.css&quot;&gt; &lt;script type=&quot;module&quot; src=&quot;https://cdn.jsdelivr.net/npm/pushfeedback/dist/pushfeedback/pushfeedback.esm.js&quot;&gt;&lt;/script&gt; To insert the feedback button just before the &lt;/body&gt; tag: While still in the Theme Editor, locate and click on the footer.php file from the right sidebar. Just before the &lt;/body&gt; tag, paste the following snippet: &lt;feedback-button project=&quot;&lt;YOUR_PROJECT_ID&gt;&quot; button-position=&quot;bottom-right&quot; modal-position=&quot;bottom-right&quot; button-style=&quot;light&quot;&gt;Feedback&lt;/feedback-button&gt; Replace &lt;YOUR_PROJECT_ID&gt; with your project's ID from the PushFeedback dashboard. Once you've saved your changes, visit your WordPress website in a web browser. Confirm that the feedback button is visible and operational. "},{"title":"Next steps​","type":1,"pageTitle":"Feedback widget for Wordpress","url":"/installation/wordpress#next-steps","content":"For more about customization and additional features exploration, check out the Configuration section. Need assistance? We're here to help! Reach out to us at PushFeedback Support. "},{"title":"Make (Integromat) integration","type":0,"sectionRef":"#","url":"/integrations/make","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Make (Integromat) integration","url":"/integrations/make#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Make.com account. "},{"title":"Steps​","type":1,"pageTitle":"Make (Integromat) integration","url":"/integrations/make#steps","content":"To activate the webhook integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Webhooks. Enter the URL for the Make.com webhook where you intend to send feedback data. For assistance in configuring your webhook in Make.com, see their guide on receiving a webhook from a web service. Save your changes by clicking Save. To ensure the integration is working correctly, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The data should be successfully forwarded to the specified endpoint. "},{"title":"Webhook specification​","type":1,"pageTitle":"Make (Integromat) integration","url":"/integrations/make#webhook-specification","content":"See Webhook specification. "},{"title":"Integrations and Examples​","type":1,"pageTitle":"Make (Integromat) integration","url":"/integrations/make#integrations-and-examples","content":"Make.com offers hundreds of integrations with popular apps and services, allowing you to create custom workflows tailored to your needs. Some examples of integrations you can achieve with PushFeedback and Make include: Sending feedback data to project management tools like Trello or Asana.Notifying your team in Slack or Microsoft Teams whenever new feedback is submitted.Adding feedback entries to a Google Sheets document for analysis and reporting.Integrating with CRM systems like Salesforce to keep track of customer feedback. Start integrating PushFeedback with Make.com today to unlock the full potential of your feedback management process. "},{"title":"Teams integration","type":0,"sectionRef":"#","url":"/integrations/teams","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Teams integration","url":"/integrations/teams#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Microsoft Teams workspace. "},{"title":"Steps​","type":1,"pageTitle":"Teams integration","url":"/integrations/teams#steps","content":"To activate the Slack integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Teams. Add the incoming webhook URL provided by Teams. For detailed instructions on setting up incoming webhooks in Slack, refer to Microsoft's documentation. Save your changes by clicking Save. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. You should receive a notification in the Teams channel associated with the webhook. "},{"title":"Email integration","type":0,"sectionRef":"#","url":"/integrations/email","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Email integration","url":"/integrations/email#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Steps​","type":1,"pageTitle":"Email integration","url":"/integrations/email#steps","content":"To activate the email notification integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Email. Add the email addresses of the team members you'd like to notify when feedback is received. info PushFeedback lets you configure up to three email addresses. If you need to notify more recipients, consider using an email distribution list. Save your changes by clicking Save. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The specified email addresses should receive the feedback. "},{"title":"Zapier integration","type":0,"sectionRef":"#","url":"/integrations/zapier","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Zapier integration","url":"/integrations/zapier#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Zapier account on a paid plan or during their trial period, as Webhooks by Zapier is a built-in tool only available for these users. "},{"title":"Steps​","type":1,"pageTitle":"Zapier integration","url":"/integrations/zapier#steps","content":"To activate the webhook integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Webhooks. Add the URL of the Zapier endpoint where you want to send the feedback data and configure your Zap on Zapier. For detailed instructions on setting up incoming webhooks in Zapier, refer to Zapier's documentation. Save your changes by clicking Save. To ensure the integration is working correctly, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The data should be successfully forwarded to the specified endpoint. "},{"title":"Webhook specification​","type":1,"pageTitle":"Zapier integration","url":"/integrations/zapier#webhook-specification","content":"See Webhook specification. "},{"title":"Integrations and Examples​","type":1,"pageTitle":"Zapier integration","url":"/integrations/zapier#integrations-and-examples","content":"Zapier offers hundreds of integrations with popular apps and services, allowing you to create custom workflows tailored to your needs. Some examples of integrations you can achieve with PushFeedback and Zapier include: Sending feedback data to project management tools like Trello or Asana.Notifying your team in Slack or Microsoft Teams whenever new feedback is submitted.Adding feedback entries to a Google Sheets document for analysis and reporting.Integrating with CRM systems like Salesforce to keep track of customer feedback. Start integrating PushFeedback with Zapier today to unlock the full potential of your feedback management process. "},{"title":"Incoming Webhooks integration","type":0,"sectionRef":"#","url":"/integrations/webhooks","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Incoming Webhooks integration","url":"/integrations/webhooks#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide. "},{"title":"Steps​","type":1,"pageTitle":"Incoming Webhooks integration","url":"/integrations/webhooks#steps","content":"To activate the webhook integration in PushFeedback and start forwarding user feedback to your desired endpoint, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Webhooks. Add the URL of the endpoint where you want to send the feedback data. Save your changes by clicking Save. To ensure the integration is working correctly, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. The data should be successfully forwarded to the specified endpoint. "},{"title":"Webhook specification​","type":1,"pageTitle":"Incoming Webhooks integration","url":"/integrations/webhooks#webhook-specification","content":"Here's an example of a webhook payload that PushFeedback sends to the specified URL: { &quot;id&quot;: &quot;EVNT-feedback123&quot;, &quot;object&quot;: &quot;event&quot;, &quot;creation_time&quot;: &quot;2024-05-03T08:00:00Z&quot;, &quot;type&quot;: &quot;feedback.created&quot;, &quot;api_version&quot;: &quot;v1&quot;, &quot;data&quot;: { &quot;object&quot;: &quot;feedback&quot;, &quot;id&quot;: &quot;feedback123&quot;, &quot;project_id&quot;: &quot;https://app.pushfeedback.com/team1/projects/project1/&quot;, &quot;message&quot;: &quot;This is a sample feedback message.&quot;, &quot;url&quot;: &quot;https://example.com/page&quot;, &quot;rating&quot;: 4, &quot;rating_mode&quot;: &quot;star&quot;, &quot;has_screenshot&quot;: true, &quot;pushfeedback_url&quot;: &quot;https://app.pushfeedback.com/team1/projects/project1/&quot;, &quot;text&quot;: &quot;New feedback on PushFeedback: https://app.pushfeedback.com/team1/projects/project1/&quot; } }  "},{"title":"Slack integration","type":0,"sectionRef":"#","url":"/integrations/slack","content":"","keywords":""},{"title":"Prerequisites​","type":1,"pageTitle":"Slack integration","url":"/integrations/slack#prerequisites","content":"A PushFeedback account. If you don't have one, sign up for free.A project created in your PushFeedback dashboard. If you haven't created one yet, follow the steps in the Quickstart guide.A Slack workspace. "},{"title":"Steps​","type":1,"pageTitle":"Slack integration","url":"/integrations/slack#steps","content":"To activate the Slack integration in PushFeedback, follow the steps outlined below: Open app.pushfeedback.com. Log in using your account credentials. Once inside the dashboard, go to the Projects tab. Select the project you wish to configure. On the top-right corner of the page, click on the Settings button. Under Integrations, select Slack. Add the incoming webhook URL provided by Slack. For detailed instructions on setting up incoming webhooks in Slack, refer to Slack's documentation. Save your changes by clicking Save. To ensure the changes are in place, go to any webpage where you've implemented the PushFeedback widget and send a feedback entry. You should receive a notification in the Slack channel associated with the webhook. "},{"title":"Support","type":0,"sectionRef":"#","url":"/support","content":"","keywords":""},{"title":"Getting started​","type":1,"pageTitle":"Support","url":"/support#getting-started","content":"Quickstart: Need help installing PushFeedback? This guide covers all the steps to get you started.Installation guides: Step-by-step installation guides for a range of programming languages and frameworksConfiguration guides: Learn how to configure PushFeedback to match your site's design and requirements.Integration guides: Connect PushFeedback to your existing tools and workflows. "},{"title":"Frequently asked questions (FAQs)​","type":1,"pageTitle":"Support","url":"/support#frequently-asked-questions-faqs","content":"See our FAQs for answers to common questions about PushFeedback. "},{"title":"Contact us​","type":1,"pageTitle":"Support","url":"/support#contact-us","content":"If you can't find the solution to your problem or have further questions, don't hesitate to reach out at support@pushfeedback.com. We're here to help! Our support team is available Monday to Friday, from 9 AM to 5 PM EST. We aim to respond to all queries within 48 hours. "},{"title":"Feedback​","type":1,"pageTitle":"Support","url":"/support#feedback","content":"Your feedback is valuable to us! If you have suggestions or feedback about our platform or support, please let us know. "}]